package br.uem.din.jf.optimizationsset;

public class Optimizations {
	
	public static String[] O1 =
		{
		"-fauto-inc-dec ",
		"-fcompare-elim ",
		"-fcprop-registers ",
		"-fdce ",
		"-fdefer-pop ",
		"-fdelayed-branch ",
		"-fdse ",
		"-fguess-branch-probability ",
		"-fif-conversion2 ",
		"-fif-conversion ",
		"-fipa-pure-const ",
		"-fipa-profile ",
		"-fipa-reference ",
		"-fmerge-constants",
		"-fsplit-wide-types ",
		"-ftree-bit-ccp ",
		"-ftree-builtin-call-dce ",
		"-ftree-ccp ",
		"-ftree-ch ",
		"-ftree-copyrename ",
		"-ftree-dce ",
		"-ftree-dominator-opts ",
		"-ftree-dse ",
		"-ftree-forwprop ",
		"-ftree-fre ",
		"-ftree-phiprop ",
		"-ftree-slsr ",
		"-ftree-sra ",
		"-ftree-pta ",
		"-ftree-ter ",
		"-funit-at-a-time"
		};
	
	public static String[] TOTAL_OPTIMIZATIONS =
		{
//		"-O1",
//		"-O2",
//		"-O3",
//		"-Oz",
//		"-targetlibinfo",
//		"-simplify-libcalls",
//		"-no-aa",
//		"-lazy-value-info",
//		"-tbaa",
//		"-jump-threading",
//		"-basicaa",
//		"-correlated-propagation",
//		"-globalopt",
//		"-simplifycfg",
//		"-ipsccp",
//		"-deadargelim",
//		"-instcombine",
//		"-simplifycfg",
//		"-basiccg",
//		"-prune-eh",
//		"-inline",
//		"-instcombine",
//		"-tailcallelim",
//		"-simplifycfg",
//		"-reassociate",
//		"-domtree",
//		"-loops",
//		"-loop-simplify",
//		"-lcssa",
//		"-functionattrs",
//		"-loop-rotate",
//		"-argpromotion",
//		"-licm",
//		"-sroa",
//		"-lcssa",
//		"-domtree",
//		"-loop-unswitch",
//		"-early-cse",
//		"-instcombine",
//		"-scalar-evolution",
//		"-jump-threading",
//		"-loop-simplify",
//		"-correlated-propagation",
//		"-lcssa",
//		"-domtree",
//		"-indvars",
//		"-memdep",
//		"-loop-idiom",
//		"-dse",
//		"-loop-deletion",
//		"-adce",
//		"-loop-unroll",
//		"-simplifycfg",
//		"-memdep",
//		"-instcombine",
//		"-gvn",
//		"-strip-dead-prototypes",
//		"-memdep",
//		"-globaldce",
//		"-memcpyopt",
//		"-constmerge",
//		"-sccp",
//		"-preverify",
//		"-instcombine",
//		"-domtree",
//		"-lazy-value-info",
//		"-verify"
		
		"-fauto-inc-dec",
		"-fcompare-elim",
		"-fcprop-registers",
		"-fdce",
		"-fdefer-pop",
		"-fdelayed-branch",
		"-fdse",
		"-fguess-branch-probability",
		"-fif-conversion2",
		"-fif-conversion",
		"-fipa-pure-const",
		"-fipa-profile",
		"-fipa-reference",
//		"-fmerge-constant",
		"-fsplit-wide-types",
		"-ftree-bit-ccp",
		"-ftree-builtin-call-dce",
		"-ftree-ccp",
		"-ftree-ch",
		"-ftree-copyrename",
		"-ftree-dce",
		"-ftree-dominator-opts",
		"-ftree-dse",
		"-ftree-forwprop",
		"-ftree-fre",
		"-ftree-phiprop",
		"-ftree-sra",
		"-ftree-pta",
		"-ftree-ter",
		"-funit-at-a-tim",
		"-fthread-jumps",
		"-falign-functions",
		"-falign-jumps",
		"-falign-loops  ",
		"-falign-labels ",
		"-fcaller-saves ",
		"-fcrossjumping ",
		"-fcse-follow-jumps  ",
		"-fcse-skip-blocks ",
		"-fdelete-null-pointer-checks ",
		"-fdevirtualize ",
		"-fexpensive-optimizations ",
		"-fgcse  -fgcse-lm  ",
		"-finline-small-functions ",
		"-findirect-inlining ",
		"-fipa-sra ",
		"-foptimize-sibling-calls ",
		"-fpartial-inlining ",
		"-fpeephole2 ",
		"-fregmove ",
		"-freorder-blocks  ",
		"-freorder-functions ",
		"-frerun-cse-after-loop  ",
		"-fsched-interblock  ",
		"-fsched-spec ",
		"-fschedule-insns  ",
		"-fschedule-insns2 ",
		"-fstrict-aliasing ",
		"-fstrict-overflow ",
		"-ftree-switch-conversion ",
		"-ftree-tail-merge ",
		"-ftree-pre ",
		"-ftree-vrp",
		"-ftree-vectorize",
		"-fipa-cp-clone"
		
		};

}
